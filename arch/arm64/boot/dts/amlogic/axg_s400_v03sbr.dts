// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2021 Amlogic, Inc. All rights reserved.
 */

/dts-v1/;

#include "mesonaxg.dtsi"
/ {
	amlogic-dt-id = "axg_s400_v03sbr";
	compatible = "axg_s400_v03sbr";
	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		serial0 = &uart_AO;
		serial1 = &uart_A;
		i2c0 = &i2c1;
		i2c1 = &i2c_AO;
		spi1 = &spicc0;
		spi2 = &spicc1;
	};

	ion_dev {
		compatible = "amlogic, ion_dev";
		memory-region = <&ion_reserved>;
	};

	memory@00000000 {
		device_type = "memory";
		linux,usable-memory = <0x0 0x000000 0x0 0x40000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		/* global autoconfigured region for contiguous allocations */
		ramoops@0x07400000 {
			compatible = "ramoops";
			reg = <0x0 0x07400000 0x0 0x00100000>;
			record-size = <0x20000>;
			console-size = <0x40000>;
			ftrace-size = <0x80000>;
			pmsg-size = <0x20000>;
		};

		secmon_reserved:linux,secmon {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x400000>;
			alignment = <0x0 0x400000>;
			alloc-ranges = <0x0 0x05000000 0x0 0x400000>;
		};

		secos_reserved:linux,secos {
			status = "disabled";
			compatible = "amlogic, aml_secos_memory";
			reg = <0x0 0x05300000 0x0 0x2000000>;
			no-map;
		};
		fb_reserved:linux,meson-fb {
			//compatible = "amlogic, fb-memory";
			//reg = <0x0 0x3e000000 0x0 0x1f00000>;
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x2000000>;
			alignment = <0x0 0x400000>;
			alloc-ranges = <0x0 0x3e000000 0x0 0x2000000>;
		};
		ion_reserved:linux,ion-dev {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x2000000>;
			alignment = <0x0 0x400000>;
		};
	};

	meson_cooldev: meson-cooldev@0 {
		status = "okay";
		compatible = "amlogic, meson-cooldev";
		cooling_devices {
			cpucore_cool_cluster0 {
				cluster_id = <0>;
				node_name = "cpucore_cool0";
				device_type = "cpucore";
			};
		};
		cpucore_cool0:cpucore_cool0 {
			#cooling-cells = <2>;
		};
	};/*meson cooling devices end*/

	aml_sensor0: aml-sensor@0 {
		compatible = "amlogic, aml-thermal";
		device_name = "thermal";
		#thermal-sensor-cells = <1>;
		mboxes = <&mailbox 0>;
	};
	thermal-zones {
		soc_thermal {
			polling-delay = <1000>;
			polling-delay-passive = <100>;
			sustainable-power = <1050>;

			thermal-sensors = <&aml_sensor0 3>;

			trips {
				switch_on: trip-point@0 {
					temperature = <70000>;
					hysteresis = <1000>;
					type = "passive";
				};
				control: trip-point@1 {
					temperature = <80000>;
					hysteresis = <1000>;
					type = "passive";
				};
				hot: trip-point@2 {
					temperature = <85000>;
					hysteresis = <5000>;
					type = "hot";
				};
				critical: trip-point@3 {
					temperature = <260000>;
					hysteresis = <1000>;
					type = "critical";
				};
			};

			cooling-maps {
				cpufreq_cooling_map {
					trip = <&control>;
					cooling-device = <&CPU0 0 4>;
					contribution = <1024>;
				};
				cpucore_cooling_map {
					trip = <&hot>;
					cooling-device = <&cpucore_cool0 0 3>;
					contribution = <1024>;
				};
			};
		};
	};

	usb2_phy: usb2phy@ffe09000 {
			compatible = "amlogic, amlogic-new-usb2";
			status = "okay";
			reg = <0x0 0xffe09000 0x0 0x80
				0x0 0xffd01008 0x0 0x4>;
			portnum = <4>;
	};

	usb3_phy: usb3phy@ffe09080 {
			compatible = "amlogic, amlogic-new-usb3";
			status = "okay";
			reg = <0x0 0xffe09080 0x0 0x20>;
			interrupts = <0 16 4>;
			portnum = <0>;
			otg = <1>;
			gpio-vbus-power = "GPIOAO_5";
			gpios = <&gpio_ao GPIOAO_5 GPIO_ACTIVE_HIGH>;
	};

	usb0: usb@ff500000 {
			compatible = "amlogic,meson-g12a-dwc3";
			status = "okay";
			#address-cells = <2>;
			#size-cells = <2>;
			ranges;

			clocks = <&clkc CLKID_CLK81_USB>;
			clock-names = "usb_general";

			dwc3: dwc3@ff500000 {
				compatible = "snps,dwc3";
				reg = <0x0 0xff500000 0x0 0x100000>;
				interrupts = <GIC_SPI 30 IRQ_TYPE_LEVEL_HIGH>;
				dr_mode = "host";
				maximum-speed = "high-speed";
				snps,dis_u2_susphy_quirk;
				snps,quirk-frame-length-adjustment;
				usb-phy = <&usb2_phy>, <&usb3_phy>;
				clocks = <&clkc CLKID_CLK81_USB>;
				clock-names = "usb_general";
				cpu-type = "gxl";
				/*usb5v-supply = <&ao_5v>;*/
				/*usb3v3-supply = <&vddao_3v3>;*/
				/*usb1v8-supply = <&vddio_ao1v8>;*/
			};
	};

	dwc2_a {
		compatible = "amlogic,dwc2";
		device_name = "dwc2_a";
		reg = <0x0 0xff400000 0x0 0x40000>;
		status = "okay";
		interrupts = <0 31 4>;
		pl-periph-id = <0>; /** lm name */
		clock-src = "usb0"; /** clock src */
		port-id = <0>;  /** ref to mach/usb.h */
		port-type = <2>;        /** 0: otg, 1: host, 2: slave */
		port-speed = <0>; /** 0: default, high, 1: full */
		port-config = <0>; /** 0: default */
		/*0:default,1:single,2:incr,3:incr4,4:incr8,5:incr16,6:disable*/
		port-dma = <0>;
		port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
		usb-fifo = <728>;
		cpu-type = "gxl";
		/** 0: normal, 1: otg+dwc3 host only, 2: otg+dwc3 device only*/
		controller-type = <3>;
		phy-reg = <0xffe09000>;
		phy-reg-size = <0xa0>;
		clocks = <&clkc CLKID_CLK81_USB
			&clkc CLKID_CLK81_USB1_DDR_BRIDGE
			&clkc CLKID_CLK81_USB1>;
		clock-names = "usb_general",
			"usb1",
			"usb1_to_ddr";
	};

	pcie_A: pcie@f9800000 {
		compatible = "amlogic, amlogic-pcie";
		reg = <0x0 0xf9800000 0x0 0x400000
				0x0 0xff646000 0x0 0x2000
				0x0 0xf9f00000 0x0 0x100000
				0x0 PCIE_PHY_REG 0x0 PCIE_PHY_SIZE
				0x0 PCIE_RESET_REG 0x0 PCIE_RESET_SIZE>;
		reg-names = "elbi", "cfg", "config", "phy", "reset";
		reset-gpio = <&gpio GPIOX_19 GPIO_ACTIVE_HIGH>;
		interrupts = <0 177 0>;
		#interrupt-cells = <1>;
		interrupt-map-mask = <0 0 0 0>;
		interrupt-map = <0 0 0 0 &gic GIC_SPI 179 IRQ_TYPE_EDGE_RISING>;
		bus-range = <0x0 0xff>;
		#address-cells = <3>;
		#size-cells = <2>;
		device_type = "pci";
		ranges = <0x82000000 0 0 0x0 0xf9c00000 0 0x00300000>;
			/* non-prefetched memory */
		pcie-num = <1>;
		clocks = <&clkc CLKID_CLK81_USB
		&clkc CLKID_PCIE_PLL
		&clkc CLKID_CLK81_MIPI_ENABLE
		&clkc CLKID_CLK81_MIPI_BANDGAP
		&clkc CLKID_CLK81_PCIE_A
		&clkc CLKID_PCIE_CML_EN0>;
		clock-names = "pcie_general",
				"pcie_refpll",
				"pcie_mipi_enable_gate",
				"pcie_mipi_bandgap_gate",
				"pcie",
				"port";
		/*reset-gpio-type 0:Shared pad(no reset)1:OD pad2:Normal pad*/
		gpio-type = <2>;
		status = "disabled";
	};

	pcie_B: pcie@fa000000 {
		compatible = "amlogic, amlogic-pcie", "snps,dw-pcie";
		reg = <0x0 0xfa000000 0x0 0x400000
				0x0 0xff648000 0x0 0x2000
				0x0 0xfa400000 0x0 0x100000
				0x0 PCIE_PHY_REG 0x0 PCIE_PHY_SIZE
				0x0 PCIE_RESET_REG 0x0 PCIE_RESET_SIZE>;
		reg-names = "elbi", "cfg", "config", "phy", "reset";
		reset-gpio = <&gpio GPIOZ_10 GPIO_ACTIVE_HIGH>;
		interrupts = <0 167 0>;
		#interrupt-cells = <1>;
		bus-range = <0x0 0xff>;
		#address-cells = <3>;
		#size-cells = <2>;
		interrupt-map-mask = <0 0 0 0>;
		interrupt-map = <0 0 0 0 &gic GIC_SPI 169 IRQ_TYPE_EDGE_RISING>;
		device_type = "pci";
		ranges = <0x81000000 0 0 0 0xfa500000 0x0 0x10000
			/* downstream I/O */
			0x82000000 0 0xfa510000 0x0 0xfa510000 0 0x002f0000>;
			/* non-prefetched memory */
		num-lanes = <1>;
		pcie-num = <2>;
		clocks = <&clkc CLKID_CLK81_USB
				&clkc CLKID_PCIE_PLL
				&clkc CLKID_CLK81_MIPI_ENABLE
				&clkc CLKID_CLK81_MIPI_BANDGAP
				&clkc CLKID_CLK81_PCIE_B
				&clkc CLKID_PCIE_CML_EN1>;
		clock-names = "pcie_general",
				"pcie_refpll",
				"pcie_mipi_enable_gate",
				"pcie_mipi_bandgap_gate",
				"pcie",
				"port";
		/*reset-gpio-type 0:Shared pad(no reset)1:OD pad2:Normal pad*/
		gpio-type = <1>;
		status = "disabled";
	};

	uart_A: serial@ffd24000 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0xffd24000 0x0 0x18>;
		interrupts = <0 26 1>;
		status = "disabled";
		clocks = <&xtal
			&clkc CLKID_CLK81_UART0>;
		clock-names = "clk_uart",
			"clk_gate";
		fifosize = < 128 >;
		pinctrl-names = "default";
		pinctrl-0 = <&a_uart_pins>;
	};

	uart_B: serial@ffd23000 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0xffd23000 0x0 0x18>;
		interrupts = <0 75 1>;
		status = "disabled";
		//clocks = <&xtal
		//	&clkc CLKID_UART1>;
		//clock-names = "clk_uart",
		//	"clk_gate";
		fifosize = < 64 >;
		pinctrl-names = "default";
		pinctrl-0 = <&b_uart_pins>;
	};

	auge_sound {
		compatible = "amlogic, auge-sound-card";
		aml-audio-card,name = "AML-AUGESOUND";
		aml-audio-card,hp-det-gpio = <&gpio GPIOZ_7 GPIO_ACTIVE_LOW>;
		//interrupts = <GIC_SPI 51 IRQ_TYPE_EDGE_RISING>;
		//interrupt-names = "audio_exception64";
		status = "okay";
		aml-audio-card,dai-link@0 {
			format = "dsp_a";
			mclk-fs = <256>;//512
			//continuous-clock;
			bitclock-inversion;
			//frame-inversion;
			bitclock-master = <&tdma>;
			frame-master = <&tdma>;
			cpu {
				sound-dai = <&tdma>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@1 {
			format = "i2s";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/*A113D tdmb slave for HDMI*/
			bitclock-master = <&tdmbcodec>;
			frame-master = <&tdmbcodec>;
			suffix-name = "alsaPORT-i2sCapture";
			cpu {
				sound-dai = <&tdmb>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			tdmbcodec:codec {
				sound-dai = <&dummy_codec>;
				//sound-dai = <&tas5707_1b>;
			};
		};

		aml-audio-card,dai-link@2 {
			format = "i2s";
			mclk-fs = <256>;
			continuous-clock;
			/* tdmb clk using tdmc so no bclk-inv */
			//bitclock-inversion;
			//frame-inversion;
			bitclock-master = <&tdmc>;
			frame-master = <&tdmc>;
			cpu {
				sound-dai = <&tdmc>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			codec {
				prefix-names = "tas5782m_pu1", "tas5782m_pu2",
				"tas5782m_pu3", "tas5782m_pu4", "tas5782m_pu5",
				"tas5782m_pu6";
				sound-dai = <&tas5782m_pu1 &tas5782m_pu2
				&tas5782m_pu3 &tas5782m_pu4 &tas5782m_pu5
				&tas5782m_pu6>;
			};
		};

		aml-audio-card,dai-link@3 {
			mclk-fs = <256>;
			cpu {
				sound-dai = <&pdm>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@4 {
			mclk-fs = <128>;
			cpu {
				sound-dai = <&aml_spdif>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@5 {
			mclk-fs = <256>;
			continuous-clock;
			suffix-name = "alsaPORT-loopback";
			cpu {
				sound-dai = <&loopback>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};
	};

	audiolocker: locker {
		compatible = "amlogic, audiolocker";
		clocks = <&clkaudio CLKID_AUDIO_LOCKER_OUT
				&clkaudio CLKID_AUDIO_LOCKER_IN
				&clkaudio CLKID_AUDIO_MCLK_D
				&clkaudio CLKID_AUDIO_MCLK_E
				&clkc CLKID_MPLL1
				&clkc CLKID_MPLL2>;
		clock-names = "lock_out", "lock_in", "out_src",
					"in_src", "out_calc", "in_ref";
		interrupts = <GIC_SPI 1 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "irq";
		frequency = <49000000>; /* pll */
		dividor = <49>; /* locker's parent */
		status = "disabled";
	};
	/* Audio Related end */

	vddq1v2_reg: fixedregulator@2 {
		compatible = "regulator-fixed";
		vin-supply = <&vbat>;
		regulator-name = "VDDQ1.2V";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-boot-on;
		regulator-always-on;
	};

	partitions: partitions{
		parts = <11>;
		part-0 = <&logo>;
		part-1 = <&recovery>;
		part-2 = <&rsv>;
		part-3 = <&tee>;
		part-4 = <&crypt>;
		part-5 = <&misc>;
		part-6 = <&instaboot>;
		part-7 = <&boot>;
		part-8 = <&system>;
		part-9 = <&cache>;
		part-10 = <&data>;

		logo:logo{
			pname = "logo";
			size = <0x0 0x2000000>;
			mask = <1>;
		};
		recovery:recovery{
			pname = "recovery";
			size = <0x0 0x2000000>;
			mask = <1>;
		};
		rsv:rsv{
			pname = "rsv";
			size = <0x0 0x800000>;
			mask = <1>;
		};
		tee:tee{
			pname = "tee";
			size = <0x0 0x800000>;
			mask = <1>;
		};
		crypt:crypt{
			pname = "crypt";
			size = <0x0 0x2000000>;
			mask = <1>;
		};
		misc:misc{
			pname = "misc";
			size = <0x0 0x2000000>;
			mask = <1>;
		};
		instaboot:instaboot{
			pname = "instaboot";
			size = <0x0 0x400000>;
			mask = <1>;
		};
		boot:boot
		{
			pname = "boot";
			size = <0x0 0x2000000>;
			mask = <1>;
		};
		system:system
		{
			pname = "system";
			size = <0x0 0x80000000>;
			mask = <1>;
		};
		cache:cache
		{
			pname = "cache";
			size = <0x0 0x20000000>;
			mask = <2>;
		};
		data:data
		{
			pname = "data";
			size = <0xffffffff 0xffffffff>;
			mask = <4>;
		};
	};

	meson-fb {
		compatible = "amlogic, fb-axg";
		memory-region = <&fb_reserved>;
		dev_name = "meson-fb";
		status = "disabled";
		interrupts = <0 3 1
			0 89 1>;
		interrupt-names = "viu-vsync", "rdma";
		mem_size = <0x00300000 0x1800000 0x00000000>;
		/* uboot logo,fb0/fb1 memory size */
		display_mode_default = "1080p60hz";
		scale_mode = <0>;
		/** 0:VPU free scale 1:OSD free scale 2:OSD super scale */
		display_size_default = <768 1024 768 2048 32>;
		/*768*1024*4*2 = 0x600000*/
		mem_alloc = <1>;
		logo_addr = "0x3e000000";
		pxp_mode = <0>; /** 0:normal mode 1:pxp mode */
	};

	ge2d {
		compatible = "amlogic, ge2d-axg";
		status = "disabled";
		interrupts = <GIC_SPI 150 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "ge2d";
		clocks = <&clkc CLKID_VAPB>;
		clock-names = "clk_ge2d_gate";
		reg = <0x0 0xff940000 0x0 0x10000>;
	};

	adc_keypad {
		compatible = "amlogic, adc_keypad";
		status = "okay";
		key_name = "power", "vol-", "sos+", "wifi", "<<", ">>", "vol+";
		key_num = <7>;
		io-channels = <&saradc SARADC_CH0>;
		io-channel-names = "key-chan-0";
		key_chan = <SARADC_CH0 SARADC_CH0 SARADC_CH0
					SARADC_CH0 SARADC_CH0 SARADC_CH0 SARADC_CH0>;
		key_code = <116 114 115 139 105 106 107>;
		key_val = <0 143 266 389 512 635 840>; //val=voltage/1800mV*1023
		key_tolerance = <40 40 40 40 40 40 40>;
	};

	unifykey{
		compatible = "amlogic,unifykey";
		status = "okay";
		unifykey-num = <19>;
		unifykey-index-0 = <&keysn_0>;
		unifykey-index-1 = <&keysn_1>;
		unifykey-index-2 = <&keysn_2>;
		unifykey-index-3 = <&keysn_3>;
		unifykey-index-4 = <&keysn_4>;
		unifykey-index-5 = <&keysn_5>;
		unifykey-index-6 = <&keysn_6>;
		unifykey-index-7 = <&keysn_7>;
		unifykey-index-8 = <&keysn_8>;
		unifykey-index-9 = <&keysn_9>;
		unifykey-index-10= <&keysn_10>;
		unifykey-index-11= <&keysn_11>;
		unifykey-index-12= <&keysn_12>;
		unifykey-index-13= <&keysn_13>;
		unifykey-index-14= <&keysn_14>;
		unifykey-index-15= <&keysn_15>;
		unifykey-index-16= <&keysn_16>;
		unifykey-index-17= <&keysn_17>;
		unifykey-index-18= <&keysn_18>;

		keysn_0: key_0{
			key-name = "usid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_1:key_1{
			key-name = "mac";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_2:key_2{
			key-name = "hdcp";
			key-device = "secure";
			key-type = "sha1";
			key-permit = "read","write","del";
		};
		keysn_3:key_3{
			key-name = "secure_boot_set";
			key-device = "efuse";
			key-permit = "write";
		};
		keysn_4:key_4{
			key-name = "mac_bt";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type  = "mac";
		};
		keysn_5:key_5{
			key-name = "mac_wifi";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type = "mac";
		};
		keysn_6:key_6{
			key-name = "hdcp2_tx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_7:key_7{
			key-name = "hdcp2_rx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_8:key_8{
			key-name = "widevinekeybox";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_9:key_9{
			key-name = "deviceid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_10:key_10{
			key-name = "hdcp22_fw_private";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_11:key_11{
			key-name = "PlayReadykeybox25";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_12:key_12{
			key-name = "prpubkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_13:key_13{
			key-name = "prprivkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_14:key_14{
			key-name = "attestationkeybox";// attestation key
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_15:key_15{
			key-name = "region_code";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_16:key_16{
			key-name = "netflix_mgkid";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_17:key_17{
			key-name = "attestationdevidbox";// attest dev id box
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_18:key_18{
			key-name = "oemkey";
			key-device = "normal";
			key-permit = "read","write","del";
		};
	};//End unifykey
}; /* end of / */
&efuse {
	status = "ok";
};

&pwm_ab {
	status = "disabled";
};

/* Audio Related start */
/* for spk board */
&i2c1 {
	status = "okay";
	pinctrl-names="default";
	pinctrl-0=<&b_i2c_master>;

	tlv320adc3101_19: tlv320adc3101_19@19 {
		compatible = "ti, tlv320adc3101";
		#sound-dai-cells = <0>;
		reg = <0x19>;
		differential_pair = <1>;
		status = "okay";
	};

	/*****************************************************************/
	tas5782m_pu1: tas5782m_pu1@48 {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x48>;
		reset_pin = <&gpio_ao GPIOAO_4 GPIO_ACTIVE_LOW>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <1>; /*chip_N [1,2....]*/
	};

	tas5782m_pu2: tas5782m_pu2@49 {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x49>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <2>; /*chip_N [1,2....]*/
	};

	tas5782m_pu3: tas5782m_pu3@4a {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x4a>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <3>; /*chip_N [1,2....]*/
	};

	tas5782m_pu4: tas5782m_pu4@4b {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x4b>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <4>; /*chip_N [1,2....]*/
	};
	/*****************************************************************/

	tas5707_1b: tas5707_1b@1b {
		compatible = "ti,tas5707";
		#sound-dai-cells = <0>;
		reg = <0x1b>;
		status = "disabled";
		reset_pin = <&gpio_ao GPIOAO_4 0>;
	};

	tas5707_1d: tas5707_1d@1d {
		compatible = "ti,tas5707";
		#sound-dai-cells = <0>;
		reg = <0x1d>;
		status = "disabled";
	};
};

/* for mic board */
&i2c_AO {
	status = "okay";
	pinctrl-names="default";
	pinctrl-0=<&ao_i2c_master_pin2>;

	/*****************************************************************/
	mcu6350: mcu6350@40 {
		reg = <0x40>;
		status = "okay";
	};

	/*****************************************************************/
	tas5782m_pu5: tas5782m_pu5@48 {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x48>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <5>; /*chip_N [1,2....]*/
	};

	tas5782m_pu6: tas5782m_pu6@49 {
		compatible = "ti, tas5782m";
		#sound-dai-cells = <0>;
		reg = <0x49>;
		status = "okay";
		codec_name = "tas5782m";
		work_mode = <0>;  /*0: i2s 1:tdm*/
		chip_offset = <6>; /*chip_N [1,2....]*/
	};
	/*****************************************************************/

	aml_pca9557: aml_pca9557@1f {
		compatible = "aml, ledring";
		reg = <0x1f>;
		mode = <0>; /*0: 6-led 1: 4key+2led */
		key_num = <4>;
		led_dev_name = "aml_ledring";
		key_dev_name = "aml_pca_key";
		key_name = "mute", "pause", "vol+", "vol-";
		key_value = <200 201 202 203>;
		status = "okay";
	};

	tlv320adc3101_18: tlv320adc3101_18@18 {
		compatible = "ti,tlv320adc3101";
		#sound-dai-cells = <0>;
		reg = <0x18>;
		status = "disabled";
	};
	tlv320adc3101_1a: tlv320adc3101_1a@1a {
		compatible = "ti,tlv320adc3101";
		#sound-dai-cells = <0>;
		reg = <0x1a>;
		status = "disabled";
	};
	tlv320adc3101_1b: tlv320adc3101_1b@1b {
		compatible = "ti,tlv320adc3101";
		#sound-dai-cells = <0>;
		reg = <0x1b>;
		status = "disabled";
	};
	es7243_10: es7243_10@10 {
		compatible = "MicArray_0";
		#sound-dai-cells = <0>;
		reg = <0x10>;
		status = "disabled";
	};
	es7243_12: es7243_12@12 {
		compatible = "MicArray_1";
		#sound-dai-cells = <0>;
		reg = <0x12>;
		status = "disabled";
	};
	es7243_13: es7243_13@13 {
		compatible = "MicArray_2";
		#sound-dai-cells = <0>;
		reg = <0x13>;
		status = "disabled";
	};
	is31fl3236a: is31f3236a@3c {
			compatible = "issi,is31fl3236";
			reg = <0x3c>;
			status = "disabled";
			led1_r {
					label="LED1_R";
					reg_offset = <24>;
			};
			led1_g {
					label="LED1_G";
					reg_offset = <23>;
			};
			led1_b {
					label="LED1_B";
					reg_offset = <22>;
			};
			led2_r {
					label="LED2_R";
					reg_offset = <21>;
			};
			led2_g {
					label="LED2_G";
					reg_offset = <20>;
			};
			led2_b {
					label="LED2_B";
					reg_offset = <19>;
			};
			led3_r {
					label="LED3_R";
					reg_offset = <18>;
			};
			led3_g {
					label="LED3_G";
					reg_offset = <17>;
			};
			led3_b {
					label="LED3_B";
					reg_offset = <16>;
			};
			led4_r {
					label="LED4_R";
					reg_offset = <15>;
			};
			led4_g {
					label="LED4_G";
					reg_offset = <14>;
			};
			led4_b {
					label="LED4_B";
					reg_offset = <13>;
			};
			led5_r {
					label="LED5_R";
					reg_offset = <36>;
			};
			led5_g {
					label="LED5_G";
					reg_offset = <35>;
			};
			led5_b {
					label="LED5_B";
					reg_offset = <34>;
			};
			led6_r {
					label="LED6_R";
					reg_offset = <33>;
			};
			led6_g {
					label="LED6_G";
					reg_offset = <32>;
			};
			led6_b {
					label="LED6_B";
					reg_offset = <31>;
			};
			led7_r {
					label="LED7_R";
					reg_offset = <30>;
			};
			led7_g {
					label="LED7_G";
					reg_offset = <29>;
			};
			led7_b {
					label="LED7_B";
					reg_offset = <28>;
			};
			led8_r {
					label="LED8_R";
					reg_offset = <27>;
			};
			led8_g {
					label="LED8_G";
					reg_offset = <26>;
			};
			led8_b {
					label="LED8_B";
					reg_offset = <25>;
			};
	};
};

&sd_emmc_c {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_conf_pull_up>, <&emmc_conf_pull_done>;

	bus-width = <8>;
	cap-sd-highspeed;
	cap-mmc-highspeed;
	mmc-ddr-1_8v;
	mmc-hs200-1_8v;
	mmc-hs400-1_8v;
	max-frequency = <200000000>;
	non-removable;
	disable-wp;
	init_core_phase = <3>;
	no-sd;
	no-sdio;
};

&sd_emmc_b {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&sdio_clk_cmd_pins>, <&sdio_all_pins>;

	bus-width = <4>;
	cap-sd-highspeed;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	max-frequency = <200000000>;

	non-removable;
	disable-wp;
	init_core_phase = <3>;
	init_tx_phase = <0>;
	no-mmc;
	no-sd;
};

&audiobus {
	tdma: tdma {
		compatible = "amlogic, axg-snd-tdma";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <1 0>;
		dai-tdm-lane-slot-mask-out = <0 1>;
		dai-tdm-clk-sel = <0>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_A
				&clkc CLKID_MPLL0>;
		clock-names = "mclk", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdma_pins>;
	};

	tdmb: tdmb {
		compatible = "amlogic, axg-snd-tdmb";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <1 1 1 1>;
		dai-tdm-lane-slot-mask-out = <0 0 0 0>;
		dai-tdm-clk-sel = <1>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_B
				&clkc CLKID_MPLL1>;
		clock-names = "mclk", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdmb_pins &tdmb_mclk>;
	};

	tdmc: tdmc {
		compatible = "amlogic, axg-snd-tdmc";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-out = <1 1 1 1>;
		dai-tdm-lane-slot-mask-in = <0 0 0 0>;
		dai-tdm-clk-sel = <2>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_C
				&clkc CLKID_MPLL2>;
		clock-names = "mclk", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdmc_pins &tdmc_mclk>;
		clk_tuning_enable = <1>;
	};

	aml_spdif: spdif {
		compatible = "amlogic, axg-snd-spdif";
		#sound-dai-cells = <0>;
		clocks = <&clkc CLKID_MPLL0
				&clkc CLKID_FCLK_DIV4
				&clkaudio CLKID_AUDIO_SPDIFIN
				&clkaudio CLKID_AUDIO_SPDIFOUT
				&clkaudio CLKID_AUDIO_SPDIFIN_CTRL
				&clkaudio CLKID_AUDIO_SPDIFOUT_CTRL>;
		clock-names = "sysclk", "fixed_clk", "gate_spdifin",
				"gate_spdifout", "clk_spdifin", "clk_spdifout";
		interrupts =
				<GIC_SPI 87 IRQ_TYPE_EDGE_RISING>;

		interrupt-names = "irq_spdifin";
		pinctrl-names = "spdif_pins";
		pinctrl-0 = <&spdifout &spdifin>;

		/*
		 * whether do asrc for pcm.
		 * if raw data, asrc is disabled automatically
		 * 0: "Disable",
		 * 1: "Enable:32K",
		 * 2: "Enable:44K",
		 * 3: "Enable:48K",
		 * 4: "Enable:88K",
		 * 5: "Enable:96K",
		 * 6: "Enable:176K",
		 * 7: "Enable:192K",
		 */
		auto_asrc = <3>;
		status = "okay";
	};

	pdm: pdm {
		compatible = "amlogic, axg-snd-pdm";
		#sound-dai-cells = <0>;
		clocks = <&clkaudio CLKID_AUDIO_PDM
			&clkc CLKID_FCLK_DIV3
			&clkc CLKID_MPLL3
			&clkaudio CLKID_AUDIO_PDMIN0
			&clkaudio CLKID_AUDIO_PDMIN1>;
		clock-names = "gate",
			"sysclk_srcpll",
			"dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk";
		pinctrl-names = "pdm_pins";
		pinctrl-0 = <&pdmin>;
		filter_mode = <1>; /* mode 0~4, defalut:1 */
		status = "okay";
	};

	loopback:loopback@0 {
		compatible = "amlogic, axg-loopback";
		#sound-dai-cells = <0>;

		clocks = <&clkaudio CLKID_AUDIO_PDM
			&clkc CLKID_FCLK_DIV3
			&clkc CLKID_MPLL3
			&clkaudio CLKID_AUDIO_PDMIN0
			&clkaudio CLKID_AUDIO_PDMIN1
			&clkc CLKID_MPLL0
			&clkaudio CLKID_AUDIO_MCLK_A>;
		clock-names = "pdm_gate",
			"pdm_sysclk_srcpll",
			"pdm_dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk",
			"tdminlb_mpll",
			"tdminlb_mclk";

		/* datain src
		 * 0: tdmin_a;
		 * 1: tdmin_b;
		 * 2: tdmin_c;
		 * 3: spdifin;
		 * 4: pdmin;
		 */
		datain_src = <4>;
		datain_chnum = <8>;
		datain_chmask = <0xff>;
		/* config which data pin for loopback */
		datain-lane-mask-in = <1 1 1 1>;

		/* calc mclk for datalb */
		mclk-fs = <256>;

		/* tdmin_lb src
		 * 0: tdmoutA
		 * 1: tdmoutB
		 * 2: tdmoutC
		 * 3: PAD_TDMINA_DIN*, refer to core pinmux
		 * 4: PAD_TDMINB_DIN*, refer to core pinmux
		 * 5: PAD_TDMINC_DIN*, refer to core pinmux
		 * 6: PAD_TDMINA_D*, oe, refer to core pinmux
		 * 7: PAD_TDMINB_D*, oe, refer to core pinmux
		 */
		/* if tdmin_lb >= 3, use external loopback */
		datalb_src = <2>;
		datalb_chnum = <8>;
		datalb_chmask = <0xff>;
		/* config which data pin as loopback */
		datalb-lane-mask-in = <1 1 1 1>;

		status = "okay";
	};

	audioresample: resample {
		compatible = "amlogic, axg-resample";
		clocks = <&clkc CLKID_MPLL3
				&clkaudio CLKID_AUDIO_MCLK_F
				&clkaudio CLKID_AUDIO_RESAMPLE_CTRL>;
		clock-names = "resample_pll", "resample_src", "resample_clk";
		/*same with toddr_src
		 *	TDMIN_A,
		 *	TDMIN_B,
		 *	TDMIN_C,
		 *	SPDIFIN,
		 *	PDMIN,
		 *	NONE,
		 *	TDMIN_LB,
		 *	LOOPBACK,
		 */
		resample_module = <3>;
		status = "disabled";
	};
	aml_pwrdet: pwrdet {
		compatible = "amlogic, axg-power-detect";

		interrupts = <GIC_SPI 91 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "pwrdet_irq";

		/* pwrdet source sel
		 * 7: loopback;
		 * 6: tdmin_lb;
		 * 5: reserved;
		 * 4: pdmin;
		 * 3: spdifin;
		 * 2: tdmin_c;
		 * 1: tdmin_b;
		 * 0: tdmin_a;
		 */
		pwrdet_src = <4>;

		hi_th = <0x70000>;
		lo_th = <0x16000>;

		status = "disabled";
	};
}; /* end of audiobus */

&pinctrl_periphs {
	tdma_pins: tdma {
		mux {
			groups = "tdma_sclk",
				"tdma_fs",
				"tdma_dout1",
				"tdma_din0";
			function = "tdma";
		};
	};
	tdmb_mclk: tdmb_mclk {
		mux {
			groups = "mclk_b";
			function = "mclk_b";
		};
	};

	tdmb_pins: tdmb {
		mux {
			groups = "tdmb_sclk_slv",
				"tdmb_fs_slv",
				"tdmb_din0",
				"tdmb_din1",
				"tdmb_din2",
				"tdmb_din3";
			function = "tdmb";
		};
	};

	tdmc_mclk: tdmc_mclk {
		mux {
			groups = "mclk_a";
			function = "mclk_a";
		};
	};

	tdmc_pins:tdmc {
		mux {
			groups = "tdmc_sclk",
				"tdmc_fs",
				"tdmc_dout0",
				"tdmc_dout1",
				"tdmc_dout2",
				"tdmc_dout3";
			function = "tdmc";
		};
	};

	spdifout: spidfout {
		mux {
			groups = "spdif_out_a20";
			function = "spdif_out";
		};
	};

	spdifin: spidfin {
		mux {
			groups = "spdif_in_a19";
			function = "spdif_in";
		};
	};

	pdmin: pdmin {
		mux {
			groups = "pdm_dclk_a14",
				"pdm_din0",
				"pdm_din1",
				"pdm_din2";
				/* "pdm_din3"; */ /*HDMI I2S IN MUTE control*/
			function = "pdm";
		};
	};

	bl_pwm_off_pins:bl_pwm_off_pin {
		mux {
			pins = "GPIOZ_4";
			function = "gpio_periphs";
			output-high;
		};
	};
}; /* end of pinctrl_periphs */
/* Audio Related End */

&aobus{
	uart_AO: serial@3000 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0x3000 0x0 0x18>;
		interrupts = <0 193 1>;
		status = "okay";
		clocks = <&xtal>;
		clock-names = "clk_uart";
		xtal_tick_en = <0>;
		fifosize = < 64 >;
		//pinctrl-names = "default";
		//pinctrl-0 = <&ao_uart_pins>;
		support-sysrq = <0>;	/* 0 not support , 1 support */
	};

	uart_AO_B: serial@4000 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0x4000 0x0 0x18>;
		interrupts = <0 197 1>;
		status = "disabled";
		clocks = <&xtal>;
		clock-names = "clk_uart";
		fifosize = < 64 >;
		pinctrl-names = "default";
		pinctrl-0 = <&ao_b_uart_pins>;
	};
};

&mtd_nand {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	bl_mode = <1>;
	fip_copies = <4>;
	fip_size = <0x200000>;
	ship_bad_block = <1>;
	disa_irq_flag = <1>;

	nand@bootloader {
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;
		nand-ecc-maximize;
		partition@0 {
			label = "bootloader";
			reg = <0x0 0x00000000>;
		};
	};
	nand@normal {
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;
		nand-ecc-maximize;

		partition@0 {
			label = "tpl";
			reg = <0x0 0x00000000>;
		};
		partition@1 {
			label = "misc";
			reg = <0x0 0x00200000>;
		};
		partition@2 {
			label = "logo";
			reg = <0x0 0x00200000>;
		};
		partition@3 {
			label = "recovery";
			reg = <0x0 0x1000000>;
		};
		partition@4 {
			label = "boot";
			reg = <0x0 0x0F00000>;
		};
		partition@5 {
			label = "system";
			reg = <0x0 0x11800000>;
		};
		partition@6 {
			label = "data";
			reg = <0x0 0xffffffff>;
		};
	};
};

&audio_data{
	status = "okay";
};

&ethmac {
	status = "okay";
	pinctrl-0 = <&eth_rgmii_y_pins>;
	pinctrl-names = "default";
	phy-handle = <&eth_phy0>;
	phy-mode = "rgmii";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		eth_phy0: ethernet-phy@0 {
			/* Realtek RTL8211F (0x001cc916) */
			reg = <0>;
			interrupt-parent = <&gpio_intc>;
			interrupts = <98 IRQ_TYPE_LEVEL_LOW>;
			eee-broken-1000t;
		};
	};
};

&saradc {
	status = "okay";
};

&spicc0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	cs-gpios = <&gpio GPIOZ_3 0>;
};

&spicc1 {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_x_pins>;
	cs-gpios = <&gpio GPIOX_16 0>;
};

&cpus {
	CPU0:cpu@0 {
		#cooling-cells = <2>;
		dynamic-power-coefficient = <140>;
	};
};

&aml_wifi{
	status = "okay";
	interrupt-gpios = <&gpio  GPIOX_6  GPIO_ACTIVE_HIGH>;
	power_on-gpios = <&gpio   GPIOX_7  GPIO_ACTIVE_HIGH>;
	power_on_2-gpios= <&gpio  GPIOX_16 GPIO_ACTIVE_HIGH>;
};

&aml_bt {
	status = "okay";
	reset-gpios = <&gpio    GPIOX_21 GPIO_ACTIVE_HIGH>;
	//hostwake-gpios = <&gpio GPIOX_21 GPIO_ACTIVE_HIGH>;
};

&pwm_ab {
	pinctrl-0 = <&pwm_a_pins3>;
	pinctrl-names = "default";
	status = "okay";
};

&uart_A {
	status = "okay";
	uart-has-rtscts;
};

&vpu {
	status = "okay";
};

&vclk_serve {
	status = "okay";
};

&vout {
	status = "okay";
};

&pwm_ab {
	status = "okay";
};

&custom_maps{
		mapnum = <4>;
		map0 = <&map_0>;
		map1 = <&map_1>;
		map2 = <&map_2>;
		map3 = <&map_3>;
		map_0: map_0{
			mapname = "amlogic-remote-1";
			customcode = <0xfb04>;
			release_delay = <80>;
			size  = <50>;   /*keymap size*/
			keymap = <REMOTE_KEY(0x47, KEY_0)
				REMOTE_KEY(0x13, KEY_1)
				REMOTE_KEY(0x10, KEY_2)
				REMOTE_KEY(0x11, KEY_3)
				REMOTE_KEY(0x0F, KEY_4)
				REMOTE_KEY(0x0C, KEY_5)
				REMOTE_KEY(0x0D, KEY_6)
				REMOTE_KEY(0x0B, KEY_7)
				REMOTE_KEY(0x08, KEY_8)
				REMOTE_KEY(0x09, KEY_9)
				REMOTE_KEY(0x5C, KEY_RIGHTCTRL)
				REMOTE_KEY(0x51, KEY_F3)
				REMOTE_KEY(0x50, KEY_F4)
				REMOTE_KEY(0x40, KEY_F5)
				REMOTE_KEY(0x4d, KEY_F6)
				REMOTE_KEY(0x43, KEY_F7)
				REMOTE_KEY(0x17, KEY_F8)
				REMOTE_KEY(0x00, KEY_F9)
				REMOTE_KEY(0x01, KEY_F10)
				REMOTE_KEY(0x16, KEY_F11)
				REMOTE_KEY(0x49, KEY_BACKSPACE)
				REMOTE_KEY(0x06, KEY_PROPS)
				REMOTE_KEY(0x14, KEY_UNDO)
				REMOTE_KEY(0x44, KEY_UP)
				REMOTE_KEY(0x1D, KEY_DOWN)
				REMOTE_KEY(0x1C, KEY_LEFT)
				REMOTE_KEY(0x48, KEY_RIGHT)
				REMOTE_KEY(0x53, KEY_LEFTMETA)
				REMOTE_KEY(0x45, KEY_PAGEUP)
				REMOTE_KEY(0x19, KEY_PAGEDOWN)
				REMOTE_KEY(0x52, KEY_PAUSE)
				REMOTE_KEY(0x05, KEY_HANGEUL)
				REMOTE_KEY(0x59, KEY_HANJA)
				REMOTE_KEY(0x1b, KEY_SCALE)
				REMOTE_KEY(0x04, KEY_KPCOMMA)
				REMOTE_KEY(0x1A, KEY_POWER)
				REMOTE_KEY(0x0A, KEY_TAB)
				REMOTE_KEY(0x0e, KEY_MUTE)
				REMOTE_KEY(0x1F, KEY_HOME)
				REMOTE_KEY(0x1e, KEY_FRONT)
				REMOTE_KEY(0x07, KEY_COPY)
				REMOTE_KEY(0x12, KEY_OPEN)
				REMOTE_KEY(0x54, KEY_PASTE)
				REMOTE_KEY(0x02, KEY_FIND)
				REMOTE_KEY(0x4f, KEY_A)
				REMOTE_KEY(0x42, KEY_B)
				REMOTE_KEY(0x5d, KEY_C)
				REMOTE_KEY(0x4c, KEY_D)
				REMOTE_KEY(0x58, KEY_CUT)
				REMOTE_KEY(0x55, KEY_CALC)>;
		};
		map_1: map_1{
			mapname = "amlogic-remote-2";
			customcode = <0xfe01>;
			release_delay = <80>;
			size  = <52>;
			keymap = <
				REMOTE_KEY(0x10, 200) /* power */
				REMOTE_KEY(0x1f, 201) /* eject-->input source */
				REMOTE_KEY(0x01, 202) /* usb */
				REMOTE_KEY(0x02, 203) /* bt */
				REMOTE_KEY(0x03, 204) /* aux */
				REMOTE_KEY(0x04, 205) /* scan-->hdmi arc */
				REMOTE_KEY(0x05, 206) /* spdif */
				REMOTE_KEY(0x06, 207) /* hdmi1 */
				REMOTE_KEY(0x07, 208) /* hdmi2 */
				REMOTE_KEY(0x17, 209) /* mute */
				REMOTE_KEY(0x0c, 210) /* vol+ */
				REMOTE_KEY(0x0d, 211) /* vol- */
				REMOTE_KEY(0x53, 212) /* DAP */
				REMOTE_KEY(0x52, 213) /* BM */
				REMOTE_KEY(0x49, 214) /* DRC */
				REMOTE_KEY(0x46, 215) /* POST */
				REMOTE_KEY(0x58, 216) /* UPMIX */
				REMOTE_KEY(0x5a, 217) /* VIRT */
				REMOTE_KEY(0x39, 218) /* VLAMP */
				REMOTE_KEY(0x40, 219) /* HFILT */
				REMOTE_KEY(0x42, 220) /* Loundness */
				REMOTE_KEY(0x1e, 221) /* VMCAL/cspread */
				REMOTE_KEY(0xb1, 222) /* CD */
				REMOTE_KEY(0xb4, 223) /* CD */
				REMOTE_KEY(0xb9, 224) /* CD */
				REMOTE_KEY(0x08, 225) /* loop */
				REMOTE_KEY(0x91, 226) /* CD */
				REMOTE_KEY(0x92, 227) /* CD */
				REMOTE_KEY(0x89, 228) /* CD */
				REMOTE_KEY(0x88, 229) /* CD */
				REMOTE_KEY(0x59, 230) /* Audio_info */
				REMOTE_KEY(0x84, 231) /* CD */
				REMOTE_KEY(0x1c, 232) /* DRC X+0.1 */
				REMOTE_KEY(0x1b, 233) /* DRC X-0.1 */
				REMOTE_KEY(0x19, 234) /* up/DRC Y+0.1 */
				REMOTE_KEY(0x1a, 235) /* down/DRC Y-0.1 */
				REMOTE_KEY(0xa0, 236) /* CD */
				REMOTE_KEY(0x0b, 237) /* Soft mute */
				REMOTE_KEY(0x0f, 238) /* soft vol- */
				REMOTE_KEY(0x0e, 239) /* soft vol+ */
				REMOTE_KEY(0x11, 240) /* Resume */
				REMOTE_KEY(0x57, 241) /* Pause */
				REMOTE_KEY(0x44, 242) /* LEGACY */
				REMOTE_KEY(0xa7, 243) /* CD */
				REMOTE_KEY(0x09, 244) /* random */
				REMOTE_KEY(0x00, 245) /* dtsx direct mode */
				REMOTE_KEY(0x0a, 246) /* dtsx drc  */
				REMOTE_KEY(0x5b, 247) /* dtsx imax  */
				REMOTE_KEY(0x13, 248) /* dtsx dialog gain  */
				REMOTE_KEY(0x41, 249) /* dtsx dialog norm  */
				REMOTE_KEY(0x43, 250) /* dtsx spkrout */
				REMOTE_KEY(0x15, 251) /* pcm surround effect */
				>;
		};
		map_2: map_2{
			mapname = "amlogic-remote-3";
			customcode = <0xbd02>;
			release_delay = <80>;
			size  = <17>;
			keymap = <REMOTE_KEY(0xca,103)
			REMOTE_KEY(0xd2,108)
			REMOTE_KEY(0x99,105)
			REMOTE_KEY(0xc1,106)
			REMOTE_KEY(0xce,97)
			REMOTE_KEY(0x45,116)
			REMOTE_KEY(0xc5,133)
			REMOTE_KEY(0x80,113)
			REMOTE_KEY(0xd0,15)
			REMOTE_KEY(0xd6,125)
			REMOTE_KEY(0x95,102)
			REMOTE_KEY(0xdd,104)
			REMOTE_KEY(0x8c,109)
			REMOTE_KEY(0x89,131)
			REMOTE_KEY(0x9c,130)
			REMOTE_KEY(0x9a,120)
			REMOTE_KEY(0xcd,121)>;
		};
		map_3: map_3{
			mapname = "amlogic-remote-3";
			customcode = <0xa4e8>; /* Reference Remote Control */
			release_delay = <80>;
			size  = <45>;
			keymap = <
				REMOTE_KEY(0xc7, 200) /* power */
				REMOTE_KEY(0x93, 201) /* eject-->input source */
				REMOTE_KEY(0xb2, 202) /* usb */
				REMOTE_KEY(0xb8, 203) /* coaxial */
				REMOTE_KEY(0xb7, 204) /* aux */
				REMOTE_KEY(0x8a, 205) /* scan-->hdmi arc */
				REMOTE_KEY(0x96, 206) /* dimmer */
				REMOTE_KEY(0x90, 207) /* hdmi1 */
				REMOTE_KEY(0xa8, 208) /* hdmi2 */
				REMOTE_KEY(0x85, 209) /* mute */
				REMOTE_KEY(0x80, 210) /* vol+ */
				REMOTE_KEY(0x81, 211) /* vol- */
				REMOTE_KEY(0x61, 212) /* DAP */
				REMOTE_KEY(0x62, 213) /* BM */
				REMOTE_KEY(0x63, 214) /* DRC */
				REMOTE_KEY(0x64, 215) /* POST */
				REMOTE_KEY(0x65, 216) /* UPMIX */
				REMOTE_KEY(0x66, 217) /* VIRT */
				REMOTE_KEY(0x67, 218) /* LEGACY */
				REMOTE_KEY(0x68, 219) /* HFILT */
				REMOTE_KEY(0x69, 220) /* Loundness */
				REMOTE_KEY(0x60, 221) /* Audio_info */
				REMOTE_KEY(0xb1, 222) /* CD */
				REMOTE_KEY(0xb4, 223) /* CD */
				REMOTE_KEY(0xb9, 224) /* CD */
				REMOTE_KEY(0xab, 225) /* CD */
				REMOTE_KEY(0x91, 226) /* CD */
				REMOTE_KEY(0x92, 227) /* CD */
				REMOTE_KEY(0x89, 228) /* CD */
				REMOTE_KEY(0x88, 229) /* CD */
				REMOTE_KEY(0xa5, 230) /* CD */
				REMOTE_KEY(0x84, 231) /* CD */
				REMOTE_KEY(0x72, 232) /* CD */
				REMOTE_KEY(0x73, 233) /* CD */
				REMOTE_KEY(0x9a, 234) /* CD */
				REMOTE_KEY(0x9b, 235) /* CD */
				REMOTE_KEY(0xa0, 236) /* CD */
				REMOTE_KEY(0x71, 237) /* CD */
				REMOTE_KEY(0x74, 238) /* CD */
				REMOTE_KEY(0x75, 239) /* CD */
				REMOTE_KEY(0x7e, 240) /* CD */
				REMOTE_KEY(0x7f, 241) /* CD */
				REMOTE_KEY(0x7a, 242) /* CD */
				REMOTE_KEY(0xa7, 243) /* CD */
				REMOTE_KEY(0xa9, 244) /* CD */
				>;
		};
};
